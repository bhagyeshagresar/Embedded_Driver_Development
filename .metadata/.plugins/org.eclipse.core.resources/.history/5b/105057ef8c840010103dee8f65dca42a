/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#define RCC_BASE_ADDR		0x40023800UL
#define RCC_CR_REG_OFFSET	0x00UL
#define RCC_CFGR_REG_OFFSET	0x08UL

#define RCC_CR_REG_ADDR		(RCC_BASE_ADDR + RCC_CR_REG_OFFSET);
#define	RCC_CFGR_REG_ADDR	(RCC_BASE_ADDR + RCC_CFGR_REG_OFFSET);


int main(void)
{
	uint32_t *pRccCrReg 	= (uint32_t*)RCC_CR_REG_ADDR;
	uint32_t *pRccCfgrReg	= (uint32_t*)RCC_CFGR_REG_ADDR;

	//1. Enable HSE clock using HSEON bit (RCC_CR)
	*pRccCrReg |= (1 << 16);

	//2. wait until the HSE clock from the external crystal stablizes
	while(!(*pRccCrReg & (1 << 17))){

	}

	//3. Switch the system clock to HSE(RCC_CFGR)
	*pRccCfgrReg |= (1 << 0);

	//4. Do the MCO1 settings to measure it

	//4a. Configure the RCC_CFGR MCO1 bit fields to select HSE as clock source
	*pRccCfgrReg &= ~()
	*pRccCfgrReg |= (1 << 22); //Clear bit positions 21 and SET 22




    /* Loop forever */
	for(;;);
}
